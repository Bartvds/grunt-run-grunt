Grunt: The JavaScript Task Runner (v0.4.1)

Usage
 grunt [options] [task [task ...]]

Options
    --help, -h  Display this help text.                                        
        --base  Specify an alternate base path. By default, all file paths are 
                relative to the Gruntfile. (grunt.file.setBase) *              
    --no-color  Disable colored output.                                        
   --gruntfile  Specify an alternate Gruntfile. By default, grunt looks in the 
                current or parent directories for the nearest Gruntfile.js or  
                Gruntfile.coffee file.                                         
   --debug, -d  Enable debugging mode for tasks that support it.               
       --stack  Print a stack trace when exiting with a warning or fatal error.
   --force, -f  A way to force your way past warnings. Want a suggestion? Don't
                use this option, fix your code.                                
       --tasks  Additional directory paths to scan for task and "extra" files. 
                (grunt.loadTasks) *                                            
         --npm  Npm-installed grunt plugins to scan for task and "extra" files.
                (grunt.loadNpmTasks) *                                         
    --no-write  Disable writing files (dry run).                               
 --verbose, -v  Verbose mode. A lot more information output.                   
 --version, -V  Print the grunt version. Combine with --verbose for more info. 
  --completion  Output shell auto-completion rules. See the grunt-cli          
                documentation for more information.                            

Options marked with * have methods exposed via the grunt API and should instead
be specified inside the Gruntfile wherever possible.

Available tasks
   dash-victor  cli test "dash-victor" task *                                  
   dummy_tango  cli test "dummy_tango" task *                                  
    write_xray  cli test "write_xray" task *                                   
          echo  cli test "echo" task *                                         
     fail_warn  cli test "fail_warn" task *                                    
    fail_fatal  cli test "fail_fatal" task *                                   
       default  Alias for "echo:before", "dummies", "echo:after" tasks.        
       dummies  Alias for "dummy_tango:tango_one", "dummy_tango:tango-two",    
                "echo:echo", "dash-victor:victor_one", "dash-victor:victor-two"
                tasks.                                                         
        tangos  Alias for "dummy_tango:tango_one", "dummy_tango:tango_two"     
                tasks.                                                         
       victors  Alias for "dash-victor:victor_one", "dash-victor:victor-two"   
                tasks.                                                         
         multi  Alias for "echo:before", "echo:echo", "echo:after" tasks.      

Tasks run in the order specified. Arguments may be passed to tasks that accept
them by using colons, like "lint:files". Tasks marked with * are "multi tasks"
and will iterate over all sub-targets if no argument is specified.

The list of available tasks may change based on tasks directories or grunt
plugins specified in the Gruntfile or via command-line options.

For more information, see http://gruntjs.com/
